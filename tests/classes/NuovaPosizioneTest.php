<?php

require_once dirname ( __FILE__ ) . '/../../classes/Yagolands.php';
require_once dirname ( __FILE__ ) . '/../../classes/NuovaPosizione.php';
require_once dirname ( __FILE__ ) . '/../../classes/Coordinata.php';


/**
 * Test class for NuovaPosizione.
 * Generated by PHPUnit on 2011-06-05 at 15:09:47.
 */
class NuovaPosizioneTest extends PHPUnit_Framework_TestCase {

    /**
     * @var NuovaPosizione
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp () {
        $this->object = new NuovaPosizione();

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown () {
        
    }

    /**
     *
     * @return type I tests qui sotto sono stati fatti con passo 3.
     * In fase di gioco il passo è differente.
     */
    public static function provider () {
        $numeroAttivazione = 0;
        return array (
            /* Centro */
            array ( 1, array ( 'x' => 0, 'y' => 0 ) ),
            /* Primo girone */
            array ( 2, array ( 'x' => 2, 'y' => 3 ) ),
            array ( 3, array ( 'x' => 3, 'y' => 0 ) ),
            array ( 4, array ( 'x' => 2, 'y' => -3 ) ),
            array ( 5, array ( 'x' => -1, 'y' => -3 ) ),
            array ( 6, array ( 'x' => -3, 'y' => 0 ) ),
            array ( 7, array ( 'x' => -1, 'y' => 3 ) ),
            /* Secondo girone */
            array ( 8, array ( 'x' => 0, 'y' => 6 ) ),
            array ( 9, array ( 'x' => 3, 'y' => 6 ) ),
            array ( 10, array ( 'x' => 5, 'y' => 3 ) ),
            array ( 11, array ( 'x' => 6, 'y' => 0 ) ),
            array ( 12, array ( 'x' => 5, 'y' => -3 ) ),
            array ( 13, array ( 'x' => 3, 'y' => -6 ) ),
            array ( 14, array ( 'x' => 0, 'y' => -6 ) ),
            array ( 15, array ( 'x' => -3, 'y' => -6 ) ),
            array ( 16, array ( 'x' => -4, 'y' => -3 ) ),
            array ( 17, array ( 'x' => -6, 'y' => 0 ) ),
            array ( 18, array ( 'x' => -4, 'y' => 3 ) ),
            array ( 19, array ( 'x' => -3, 'y' => 6 ) ),
            /* Terzo girone */
            array ( 20, array ( 'x' => -1, 'y' => 9 ) ),
            array ( 21, array ( 'x' => 2, 'y' => 9 ) ),
            array ( 22, array ( 'x' => 5, 'y' => 9 ) ),
            array ( 23, array ( 'x' => 6, 'y' => 6 ) ),
        );

    }

    /**
     * Per testare questo codice bisogna ricordarsi di decommentare le righe
     * seguenti. Sono state commentate perchè la distanza del test è differente
     * alla distanza del gioco vero e prorio.
     * 
     * @dataProvider provider
     */
//    public function testGetActivationCoords ( $a, $b ) {
//
//        $this->assertEquals ( $b, $this->object->getActivationCoords ( $a ) );
//
//    }

}

?>
